#!/bin/bash
set -e
set -o pipefail

# This script is generated by @hitachivantara/app-shell-vite-plugin.
# Do not edit this file directly.

# This script will read the app-shell.config.json file and generate the importmap.

# The importmap will be inlined in the index.html file, by replacing the %%APPSHELL_IMPORTMAP%% placeholder.
# The config file will be inlined in the index.html file, by replacing the %%APPSHELL_CONFIG%% placeholder.

# Check if the index.html file exists in the current directory, otherwise exit:
if [ ! -f index.html ]; then
  echo "index.html file not found. Are you running this script in the correct directory?" >&2
  exit 1
fi

CONFIG_FILE=${1:-app-shell.config.json}

# Check if the config file exists, otherwise exit:
if [ ! -f "${CONFIG_FILE}" ]; then
  echo "Config file not found: ${CONFIG_FILE}" >&2
  exit 1
fi

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
INDEX_HTML_ORIGINAL="${SCRIPT_DIR}/index.html.original"

# If the index.html doesn't contain any %%APPSHELL_*%% placeholders, copy the index.html.original at the script location:
if ! grep -q "%%APPSHELL_" index.html; then
  if [ -f "${INDEX_HTML_ORIGINAL}" ]; then
    cp "${INDEX_HTML_ORIGINAL}" index.html
  fi
else
  # Backup the index.html file to index.html.original, in the current script folder:
  cp index.html "${INDEX_HTML_ORIGINAL}"
fi

# Reading the app-shell.config.json file:
CONFIG=$(cat "${CONFIG_FILE}")

# Getting the title from the config "name" property:
TITLE=$(echo "${CONFIG}" | jq -r '.name')
if [ -z "${TITLE}" ] || [ "${TITLE}" = "null" ] || [ "${TITLE}" = "undefined" ]; then
  TITLE="Hitachi Vantara"
fi

# Replacing the title placeholder in the index.html file:
sed -i.bak "s/%%APPSHELL_TITLE%%/${TITLE//\//\\/}/g" index.html && rm index.html.bak

# Getting the baseUrl from the config "baseUrl" property:
SELF_BASEURL=$(echo "${CONFIG}" | jq -r '.baseUrl')
if [ -z "${SELF_BASEURL}" ] || [ "${SELF_BASEURL}" = "null" ] || [ "${SELF_BASEURL}" = "undefined" ]; then
  SELF_BASEURL="/"
fi

# Replace the base placeholder in the index.html file:
sed -i.bak "s/%%APPSHELL_BASE%%/${SELF_BASEURL//\//\\/}/g" index.html && rm index.html.bak

# Generating the importmap:
# for each app, we add a mapping from the app id to the app url
IMPORTMAP="{\"imports\":{\"react\":\"./bundles/react.production.min.js\",\"react-dom\":\"./bundles/react-dom.production.min.js\",\"react-router-dom\":\"./bundles/react-router-dom.production.min.js\",\"@emotion/react\":\"./bundles/emotion-react.production.min.js\",\"@emotion/cache\":\"./bundles/emotion-cache.production.min.js\",\"@hitachivantara/app-shell-shared\":\"./bundles/app-shell-shared.esm.js\",\"@hitachivantara/uikit-react-shared\":\"./bundles/uikit-react-shared.esm.js\","
while IFS= read -r line; do
  id=$(echo "$line" | jq -r '.key')
  baseUrl=$(echo "$line" | jq -r '.value')
  IMPORTMAP="${IMPORTMAP}\"${id}/\":\"${baseUrl}\","
done < <(echo "${CONFIG}" | jq -c '.apps | to_entries[]')
IMPORTMAP="${IMPORTMAP%?},  \"@hv/uikit-icons/\": \"./icons/\" }}"

# Inlining the importmap in the index.html file:
sed -i.bak "s/%%APPSHELL_IMPORTMAP%%/${IMPORTMAP//\//\\/}/g" index.html && rm index.html.bak

# Inlining the config in the index.html file:
CONFIG=$(echo "${CONFIG}" | tr -d '\n')
sed -i.bak "s/%%APPSHELL_CONFIG%%/${CONFIG//\//\\/}/g" index.html && rm index.html.bak

# Removing the config file, just in case:
rm -f app-shell.config.json
